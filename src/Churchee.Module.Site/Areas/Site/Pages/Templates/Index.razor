@using BlazorMonaco
@using BlazorMonaco.Editor
@using BlazorMonaco.Languages
@using Churchee.Module.Site.Areas.Site.Models
@using Churchee.Module.Site.Features.Templates.Queries.GetTemplatesListing;
@using Churchee.Module.Site.Features.Templates.Responses;
@using MediatR
@using Microsoft.AspNetCore.Components.Sections
@using Microsoft.Extensions.Logging
@using Radzen.Blazor
@using Radzen
@using Churchee.Module.UI.Components
@page "/management/templates"
@inject ILogger<Index> Logger
@inject IMediator Mediator

<PageName></PageName>

<SectionContent SectionName="top-bar">
    <div class="rz-breadcrumb-item">
        <a class="rz-button rz-button-sm rz-success" href="/management/templates/create">Create</a>
    </div> 
</SectionContent>


<Grid TItem="TemplateListingResponse" IsLoading=isLoading Data=listingData LoadData="@LoadData" ShowEdit="true"></Grid>

@code {

    IEnumerable<TemplateListingResponse> listingData;

    bool isLoading = false;

    async Task LoadData(LoadDataArgs args)
    {
        isLoading = true;

        var result = await Mediator.Send(new GetTemplatesListingQuery(
                skip: args?.Skip ?? 0,
                take: args?.Top ?? 20,
                searchText: args?.Filter ?? string.Empty,
                orderBy: string.IsNullOrEmpty(args?.OrderBy) ? "Location asc" : args?.OrderBy), default);

        listingData = result.Data;

        isLoading = false;
    }

}