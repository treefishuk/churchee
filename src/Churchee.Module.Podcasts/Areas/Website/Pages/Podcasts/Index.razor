@page "/management/podcasts"
@inherits BasePage
@using Churchee.Module.Podcasts.Features.Queries
@using Churchee.Module.Site.Features.CDN.Queries
@using Churchee.Module.UI.Components
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.Extensions.Configuration
@using Microsoft.Extensions.Logging
@using Microsoft.AspNetCore.Components.Sections
@using MediatR
@using Radzen.Blazor
@using Radzen


<PageName></PageName>

<Grid TItem="GetListingQueryResponseItem" IsLoading=isLoading Data=listingData LoadData="@LoadData" ShowEdit="false" ImagePrefix="@(imagePrefix)"></Grid>

@code {

    string imagePrefix = "";

    protected override async Task OnInitializedAsync()
    {
        imagePrefix = await Mediator.Send(new GetCDNPathQuery());
    }

    IEnumerable<GetListingQueryResponseItem> listingData;

    bool isLoading = false;

    async Task LoadData(LoadDataArgs args)
    {
        isLoading = true;

        string orderBy = "PublishedDate";
        string orderByDirection = "desc";

        if (!string.IsNullOrEmpty(args.OrderBy))
        {
            var split = args.OrderBy.Split(" ");
            orderBy = split[0];
            orderByDirection = split[1];

        }

    var result = await Mediator.Send(new GetListingQuery(
            skip: args?.Skip ?? 0,
            take: args?.Top ?? 20,
            searchText: args?.Filter ?? string.Empty,
            orderBy: string.IsNullOrEmpty(args?.OrderBy) ? "PublishedDate desc" : args?.OrderBy), default);

    // Perform paging via Skip and Take.
    listingData = result.Data;

    isLoading = false;
    }

}
