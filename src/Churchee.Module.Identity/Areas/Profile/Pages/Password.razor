@page "/management/profile/password"
@using Churchee.Common.Abstractions.Utilities
@using System.Security.Claims

<PageName Name="Password"></PageName>

<h3>Password</h3>
﻿@if (_user == null)
{
    <div>Loading...</div>
}
else
{
    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-4">
                    <EditForm Model="@_model" OnValidSubmit="OnValidSubmit">
                        <DataAnnotationsValidator />

                        <div class="form-floating mb-3">
                            <InputText @bind-Value="_model.OldPassword" type="password" class="form-control" id="floatingOldPassword" />
                            <label for="floatingOldPassword">Current Password</label>
                            <ValidationMessage For="@(() => _model.OldPassword)" />
                        </div>

                        <div class="form-floating mb-3">
                            <InputText @bind-Value="_model.NewPassword" type="password" class="form-control" id="floatingNewPassword" />
                            <label for="floatingNewPassword">New Password</label>
                            <ValidationMessage For="@(() => _model.NewPassword)" />
                        </div>

                        <div class="form-floating mb-3">
                            <InputText @bind-Value="_model.ConfirmPassword" type="password" class="form-control" id="floatingConfirmPassword" />
                            <label for="floatingConfirmPassword">Confirm new password</label>
                            <ValidationMessage For="@(() => _model.ConfirmPassword)" />
                        </div>


                        <div class="d-grid mb-2">
                            <button disabled="@_isLoading" class="btn btn-lg btn-primary btn-login fw-bold text-uppercase">
                                Save
                                @if (_isLoading)
                                {
                                    <span class="spinner-border spinner-border-sm mr-1"></span>
                                }
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}


@code {

    [Inject]
    private ChurcheeUserManager _userManager { get; set; }

    [Inject]
    private IHttpContextAccessor _context { get; set; }

    [Inject]
    private NavigationManager _navigationManager { get; set; }

    [Inject]
    private NotificationService _notificationService { get; set; }

    [Inject]
    private IEmailService _emailService { get; set; }

    private ApplicationUser _user;

    private ChangePasswordModel _model = new ChangePasswordModel();

    private bool _isLoading = false;

    public Password()
    {
    }

    protected override async Task OnInitializedAsync()
    {
        var id = _context.HttpContext.User.FindFirstValue(ClaimTypes.NameIdentifier);
        var user = await _userManager.FindByIdAsync(id);
        _user = user;
    }

    private async void OnValidSubmit()
    {
        _isLoading = true;

        try
        {

            var id = _context.HttpContext.User.FindFirstValue(ClaimTypes.NameIdentifier);
            var user = await _userManager.FindByIdAsync(id);
            var result = await _userManager.ChangePasswordAsync(user, _model.OldPassword, _model.NewPassword);

            if (result.Succeeded)
            {
                _notificationService.Notify(NotificationSeverity.Success, "Password Updated");
            }

            else
            {
                _notificationService.Notify(NotificationSeverity.Success, "Failed to Update Password");
            }
        }
        catch (Exception)
        {
            _notificationService.Notify(NotificationSeverity.Error, "Sorry, something appears to have gone wrong, please contact support");
        }

        _isLoading = false;

        StateHasChanged();
    }

}
